//CHECKSUM:58f6385274c91d2bedd9129adcc1e5bc2f5d9ef125479aeb35b3bb98ed8c3f21
{"version":3,"sources":["../actions/call_api.js"],"names":["axios","require","callApi","url","method","body","memory","variable","headers","context","event","user","state","temp","session","renderedHeaders","bp","cms","renderTemplate","renderedBody","response","data","status","valid","error","errorCode","code","logger","args"],"mappings":";;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;AACA;;;;;AAIA,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4CC,OAA5C,KAAwD;AACtE;AACA,QAAMC,OAAO,GAAG;AACdC,IAAAA,KADc;AAEdC,IAAAA,IAAI,EAAED,KAAK,CAACE,KAAN,CAAYD,IAFJ;AAGdE,IAAAA,IAAI,EAAEH,KAAK,CAACE,KAAN,CAAYC,IAHJ;AAIdC,IAAAA,OAAO,EAAEJ,KAAK,CAACE,KAAN,CAAYE;AAJP,GAAhB;AAMA,QAAMC,eAAe,GAAGC,EAAE,CAACC,GAAH,CAAOC,cAAP,CAAsBV,OAAtB,EAA+BC,OAA/B,CAAxB;AACA,QAAMU,YAAY,GAAGH,EAAE,CAACC,GAAH,CAAOC,cAAP,CAAsBb,IAAtB,EAA4BI,OAA5B,CAArB;;AAEA,MAAI;AACF,UAAMW,QAAQ,GAAG,MAAMpB,KAAK,CAAC;AAC3BI,MAAAA,MAD2B;AAE3BD,MAAAA,GAF2B;AAG3BK,MAAAA,OAAO,EAAEO,eAHkB;AAI3BM,MAAAA,IAAI,EAAEF;AAJqB,KAAD,CAA5B;AAOAT,IAAAA,KAAK,CAACE,KAAN,CAAYN,MAAZ,EAAoBC,QAApB,IAAgC;AAAEF,MAAAA,IAAI,EAAEe,QAAQ,CAACC,IAAjB;AAAuBC,MAAAA,MAAM,EAAEF,QAAQ,CAACE;AAAxC,KAAhC;AACAZ,IAAAA,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBU,KAAjB,GAAyB,IAAzB;AACD,GAVD,CAUE,OAAOC,KAAP,EAAc;AACd,UAAMC,SAAS,GAAID,KAAK,CAACJ,QAAN,IAAkBI,KAAK,CAACJ,QAAN,CAAeE,MAAlC,IAA6CE,KAAK,CAACE,IAAnD,IAA2D,EAA7E;AACAV,IAAAA,EAAE,CAACW,MAAH,CAAUH,KAAV,CAAiB,UAASC,SAAU,4BAA2BtB,GAAI,GAAnE;AAEAO,IAAAA,KAAK,CAACE,KAAN,CAAYN,MAAZ,EAAoBC,QAApB,IAAgC;AAAEe,MAAAA,MAAM,EAAEG;AAAV,KAAhC;AACAf,IAAAA,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBU,KAAjB,GAAyB,KAAzB;AACD;AACF,CA5BD;;AA8BA,OAAOrB,OAAO,CAAC0B,IAAI,CAACzB,GAAN,EAAWyB,IAAI,CAACxB,MAAhB,EAAwBwB,IAAI,CAACvB,IAA7B,EAAmCuB,IAAI,CAACtB,MAAxC,EAAgDsB,IAAI,CAACrB,QAArD,EAA+DqB,IAAI,CAACpB,OAApE,CAAd","sourceRoot":"/var/lib/jenkins/workspace/build-linux/modules/basic-skills/src/backend","sourcesContent":["const axios = require('axios')\n/**\n * @hidden true\n */\n\nconst callApi = async (url, method, body, memory, variable, headers) => {\n  // Use context to flatten event object\n  const context = {\n    event,\n    user: event.state.user,\n    temp: event.state.temp,\n    session: event.state.session\n  }\n  const renderedHeaders = bp.cms.renderTemplate(headers, context)\n  const renderedBody = bp.cms.renderTemplate(body, context)\n\n  try {\n    const response = await axios({\n      method,\n      url,\n      headers: renderedHeaders,\n      data: renderedBody\n    })\n\n    event.state[memory][variable] = { body: response.data, status: response.status }\n    event.state.temp.valid = true\n  } catch (error) {\n    const errorCode = (error.response && error.response.status) || error.code || ''\n    bp.logger.error(`Error: ${errorCode} while calling resource \"${url}\"`)\n\n    event.state[memory][variable] = { status: errorCode }\n    event.state.temp.valid = false\n  }\n}\n\nreturn callApi(args.url, args.method, args.body, args.memory, args.variable, args.headers)\n"]}