//CHECKSUM:d13d201377c7d4bd93c7095d07d9c89e0ea80dfcdf3bf2a9eda50d106d1adc59
{"version":3,"sources":["../content-types/image.js"],"names":["base","require","path","url","tail","_","render","data","events","typing","push","type","value","resolve","BOT_URL","image","renderMessenger","attachment","payload","is_reusable","renderTelegram","renderElement","channel","module","exports","id","group","title","jsonSchema","description","required","properties","$subtype","$filter","typingIndicators","uiSchema","computePreviewText","formData","fileName","basename","includes","split","join"],"mappings":"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","sourceRoot":"/var/lib/jenkins/workspace/build-linux/modules/builtin/src/backend","sourcesContent":["const base = require('./_base')\nconst path = require('path')\nconst url = require('url')\nconst { tail } = _\n\nfunction render(data) {\n  const events = []\n\n  if (data.typing) {\n    events.push({\n      type: 'typing',\n      value: data.typing\n    })\n  }\n\n  return [\n    ...events,\n    {\n      type: 'file',\n      url: url.resolve(data.BOT_URL, data.image)\n    }\n  ]\n}\n\nfunction renderMessenger(data) {\n  const events = []\n\n  if (data.typing) {\n    events.push({\n      type: 'typing',\n      value: data.typing\n    })\n  }\n  \n  return [\n    ...events,\n    {\n      attachment: {\n        type: 'image',\n        payload: {\n          is_reusable: true,\n          url: url.resolve(data.BOT_URL, data.image)\n        }\n      }\n    }\n  ]\n}\n\nfunction renderTelegram(data) {\n  const events = []\n\n  if (data.typing) {\n    events.push({\n      type: 'typing',\n      value: data.typing\n    })\n  }\n\n  return [\n    ...events,\n    {\n      type: 'image',\n      url: url.resolve(data.BOT_URL, data.image)\n    }\n  ]\n}\n\nfunction renderElement(data, channel) {\n  if (channel === 'web' || channel === 'api') {\n    return render(data)\n  } else if (channel === 'messenger') {\n    return renderMessenger(data)\n  } else if (channel === 'telegram') {\n    return renderTelegram(data)\n  }\n\n  return [] // TODO Handle channel not supported\n}\n\nmodule.exports = {\n  id: 'builtin_image',\n  group: 'Built-in Messages',\n  title: 'Image',\n\n  jsonSchema: {\n    description: 'A message showing an image with an optional title',\n    type: 'object',\n    required: ['image'],\n    properties: {\n      image: {\n        type: 'string',\n        $subtype: 'media',\n        $filter: '.jpg, .png, .jpeg, .gif, .bmp, .tif, .tiff|image/*',\n        title: 'Image'\n      },\n      title: {\n        type: 'string',\n        description: 'Some platforms require to name the images.',\n        title: 'Title (optional)'\n      },\n      ...base.typingIndicators\n    }\n  },\n\n  uiSchema: {\n    title: {\n      'ui:field': 'i18n_field'\n    }\n  },\n\n  computePreviewText: formData => {\n    if (!formData.image) {\n      return\n    }\n\n    let fileName = path.basename(formData.image)\n    if (fileName.includes('-')) {\n      fileName = tail(fileName.split('-')).join('-')\n    }\n\n    const title = formData.title ? ' | ' + formData.title : ''\n    return `Image (${fileName}) ${title}`\n  },\n\n  renderElement: renderElement\n}\n"]}