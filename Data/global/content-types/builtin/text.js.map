//CHECKSUM:e8b62e99ba37391d88dc69c36ddc3ca92f4d42e691d542c01896a9bee55a17c0
{"version":3,"sources":["../content-types/text.js"],"names":["base","require","render","data","events","typing","push","type","value","markdown","text","renderMessenger","renderElement","channel","module","exports","id","group","title","jsonSchema","description","required","properties","variations","items","default","typingIndicators","uiSchema","$subtype","orderable","computePreviewText","formData"],"mappings":";;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,QAAMC,MAAM,GAAG,EAAf;;AAEA,MAAID,IAAI,CAACE,MAAT,EAAiB;AACfD,IAAAA,MAAM,CAACE,IAAP,CAAY;AACVC,MAAAA,IAAI,EAAE,QADI;AAEVC,MAAAA,KAAK,EAAEL,IAAI,CAACE;AAFF,KAAZ;AAID;;AAED,SAAO,CACL,GAAGD,MADE,EAEL;AACEG,IAAAA,IAAI,EAAE,MADR;AAEEE,IAAAA,QAAQ,EAAE,IAFZ;AAGEC,IAAAA,IAAI,EAAEP,IAAI,CAACO;AAHb,GAFK,CAAP;AAQD;;AAED,SAASC,eAAT,CAAyBR,IAAzB,EAA+B;AAC7B,QAAMC,MAAM,GAAG,EAAf;;AAEA,MAAID,IAAI,CAACE,MAAT,EAAiB;AACfD,IAAAA,MAAM,CAACE,IAAP,CAAY;AACVC,MAAAA,IAAI,EAAE,QADI;AAEVC,MAAAA,KAAK,EAAEL,IAAI,CAACE;AAFF,KAAZ;AAID;;AAED,SAAO,CACL,GAAGD,MADE,EAEL;AACEM,IAAAA,IAAI,EAAEP,IAAI,CAACO;AADb,GAFK,CAAP;AAMD;;AAED,SAASE,aAAT,CAAuBT,IAAvB,EAA6BU,OAA7B,EAAsC;AACpC,MAAIA,OAAO,KAAK,KAAZ,IAAqBA,OAAO,KAAK,KAAjC,IAA0CA,OAAO,KAAK,UAA1D,EAAsE;AACpE,WAAOX,MAAM,CAACC,IAAD,CAAb;AACD,GAFD,MAEO,IAAIU,OAAO,KAAK,WAAhB,EAA6B;AAClC,WAAOF,eAAe,CAACR,IAAD,CAAtB;AACD;;AAED,SAAO,EAAP,CAPoC,CAO1B;AACX;;AAEDW,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,EAAE,EAAE,cADW;AAEfC,EAAAA,KAAK,EAAE,mBAFQ;AAGfC,EAAAA,KAAK,EAAE,MAHQ;AAKfC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAE,uEADH;AAEVb,IAAAA,IAAI,EAAE,QAFI;AAGVc,IAAAA,QAAQ,EAAE,CAAC,MAAD,CAHA;AAIVC,IAAAA,UAAU,EAAE;AACVZ,MAAAA,IAAI,EAAE;AACJH,QAAAA,IAAI,EAAE,QADF;AAEJW,QAAAA,KAAK,EAAE;AAFH,OADI;AAKVK,MAAAA,UAAU,EAAE;AACVhB,QAAAA,IAAI,EAAE,OADI;AAEVW,QAAAA,KAAK,EAAE,uBAFG;AAGVM,QAAAA,KAAK,EAAE;AACLjB,UAAAA,IAAI,EAAE,QADD;AAELkB,UAAAA,OAAO,EAAE;AAFJ;AAHG,OALF;AAaV,SAAGzB,IAAI,CAAC0B;AAbE;AAJF,GALG;AA0BfC,EAAAA,QAAQ,EAAE;AACRjB,IAAAA,IAAI,EAAE;AACJ,kBAAY,YADR;AAEJkB,MAAAA,QAAQ,EAAE;AAFN,KADE;AAKRL,IAAAA,UAAU,EAAE;AACV,oBAAc;AACZM,QAAAA,SAAS,EAAE;AADC;AADJ;AALJ,GA1BK;AAqCfC,EAAAA,kBAAkB,EAAEC,QAAQ,IAAIA,QAAQ,CAACrB,IAAT,IAAiB,WAAWqB,QAAQ,CAACrB,IArCtD;AAuCfE,EAAAA,aAAa,EAAEA;AAvCA,CAAjB","sourceRoot":"/var/lib/jenkins/workspace/build-linux/modules/builtin/src/backend","sourcesContent":["const base = require('./_base')\n\nfunction render(data) {\n  const events = []\n\n  if (data.typing) {\n    events.push({\n      type: 'typing',\n      value: data.typing\n    })\n  }\n\n  return [\n    ...events,\n    {\n      type: 'text',\n      markdown: true,\n      text: data.text\n    }\n  ]\n}\n\nfunction renderMessenger(data) {\n  const events = []\n\n  if (data.typing) {\n    events.push({\n      type: 'typing',\n      value: data.typing\n    })\n  }\n  \n  return [\n    ...events,\n    {\n      text: data.text\n    }\n  ]\n}\n\nfunction renderElement(data, channel) {\n  if (channel === 'web' || channel === 'api' || channel === 'telegram') {\n    return render(data)\n  } else if (channel === 'messenger') {\n    return renderMessenger(data)\n  }\n\n  return [] // TODO\n}\n\nmodule.exports = {\n  id: 'builtin_text',\n  group: 'Built-in Messages',\n  title: 'Text',\n\n  jsonSchema: {\n    description: 'A regular text message with optional typing indicators and alternates',\n    type: 'object',\n    required: ['text'],\n    properties: {\n      text: {\n        type: 'string',\n        title: 'Message'\n      },\n      variations: {\n        type: 'array',\n        title: 'Alternates (optional)',\n        items: {\n          type: 'string',\n          default: ''\n        }\n      },\n      ...base.typingIndicators\n    }\n  },\n\n  uiSchema: {\n    text: {\n      'ui:field': 'i18n_field',\n      $subtype: 'textarea'\n    },\n    variations: {\n      'ui:options': {\n        orderable: false\n      }\n    }\n  },\n  computePreviewText: formData => formData.text && 'Text: ' + formData.text,\n\n  renderElement: renderElement\n}\n"]}